<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>multithreading on Siddharth C</title>
    <link>https://siddharthchillale.github.io/tags/multithreading/</link>
    <description>Recent content in multithreading on Siddharth C</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 23 Feb 2023 19:29:20 -0500</lastBuildDate><atom:link href="https://siddharthchillale.github.io/tags/multithreading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Primitives in C&#43;&#43; for Multithreading</title>
      <link>https://siddharthchillale.github.io/blog/multithreading_primitives/primitives/</link>
      <pubDate>Thu, 23 Feb 2023 19:29:20 -0500</pubDate>
      
      <guid>https://siddharthchillale.github.io/blog/multithreading_primitives/primitives/</guid>
      <description>Following is a short and concise overview of the synchronization primitives provided in the C++ STL (C++ 20 and above).
Below are some explanations on certain terminologies commonly seen whenever multithreading is brought up. These terminologies should be somewhat familiar to people who study computer science. However, even if I knew what these mean, I didn&amp;rsquo;t know how they interoperate with other &amp;ldquo;CS thingies&amp;rdquo;. For example, during my Masters my professor asked a question &amp;ldquo;If my computer just runs one thread at a time, is it necessary to ensure synchronization ?</description>
    </item>
    
  </channel>
</rss>
